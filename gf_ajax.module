<?php 

define('GF_AJAX_CART_ID_COUNTER_CONTAINER', 'cart-item-counter');
define('GF_AJAX_CART_COUNTER_CONTAINER_CLASS', 'gf-cart-items-count');
define('GF_AJAX_VIEWS_FILTER_JS_SETTINGS_NAME', 'gf_catalog_filter');

/**
 * @file
 * GF Ajax Features - Core functions.
 */

/**
 * Implements hook_form_alter().
 */
function gf_ajax_form_alter(&$form, $form_state, $form_id) {
  // Добавляем ajax-фонкциональность кнопке "отправить"
  // формы добавления в корзину.
  if (preg_match('/^uc_product_add_to_cart_form_/', $form_id)
    || preg_match('/^uc_catalog_buy_it_now_form_/', $form_id)
    || preg_match('/^uc_product_kit_add_to_cart_form/', $form_id)) {
    $form['actions']['submit']['#ajax'] = array(
      'callback' => 'gf_ajax_ubercart_add_to_cart',
      'progress' => [
        'type' => 'throbber',
        'message' => '',
      ],
      // 'wrapper' => 'checkboxes-div',
      // 'method' => 'replace',
      // 'effect' => 'fade',
    );
  }
}


/**
 * Чего и куда возвращаем аяксом после нажатия на кнопку добавления
 * в карзину(продукты уже добавлены).
 *
 */
function gf_ajax_ubercart_add_to_cart(){
  $commands = array();
  // TODO: реализовать возможность задавать контейнеры
  // в DOM`е страницы.

  // Если включен модуль няшных мессаг, то будем выводить
  // сообщения корзины через него.
  if (module_exists('nicemessages')) {
    $items = array();
    foreach (drupal_get_messages() as $type => $messages) {
      foreach ($messages as $key => $message) {
        $item = array(
          'type' => $type,
          'content' => $message,
          'life' => variable_get('nicemessages_' . $type . '_life', '6') * 1000,
          'glue' => variable_get('nicemessages_' . $type . '_glue', 'after'),
          'speed' => variable_get('nicemessages_' . $type . '_speed', 'slow'),
        );
        $items[] = $item;
      }
    }
    $settings = array(
      'position' => variable_get('nicemessages_position', 'bottom-left'),
      'items' => $items,
    );
    drupal_alter('nicemessages', $settings);
    drupal_add_js(array('nicemessages' => $settings), 'setting');

    $commands[] = ajax_command_settings($settings);
  }
  else {
    // Контейнер, внутри которого отображаются сообщения.
    $msg_container = variable_get('gf_ajax_msg_container', '.alert'); # надо реализовать настройку
    // Контейнер, куда будут вставляться наши мессаги(внутрь в начало).
    $content_container = variable_get('gf_ajax_content_container', '#content'); # надо реализовать настройку
    $commands[] = ajax_command_remove($msg_container);
    $commands[] = ajax_command_prepend($content_container, theme('status_messages'));
  }
  // Обновляем счетчик содержимого корзины.
  // $counter = count(uc_cart_get_contents());
  $counter = uc_cart_get_total_qty();
  $counter_container = '#' . GF_AJAX_CART_ID_COUNTER_CONTAINER;
  $counter_container .= ', .' . GF_AJAX_CART_COUNTER_CONTAINER_CLASS;
  $commands[] = ajax_command_html($counter_container, $counter );

  // Исправляем проблему, когда при добавлении в корзину товара через
  // ajax в последние посещенные url-ы уберкарта заноситься бесполезный линк на 
  // system/ajax. Это мешает правильно работать кнопке "продолжить покупки" в карзине.
  if (isset($_SESSION['uc_cart_last_url'])) unset($_SESSION['uc_cart_last_url']);

  return array(
    '#type' => 'ajax',
    '#commands' => $commands,
  );
}


/**
 * Implements hook_preprocess_pager().
 */
function gf_ajax_preprocess_pager(&$vars) {
  // Хак для ajax-пейджера. Для добавления перемещений
  // в историю переходов браузера.
  $path = drupal_get_path('module', 'gf_ajax');
  drupal_add_js($path . '/js/ajax_pager_history.js', ['weight' => 1]);
}


/**
 * Implements hook_form_views_exposed_form_alter().
 */
function gf_ajax_form_views_exposed_form_alter(&$form, &$form_state){
 
  if ($form['#id'] == 'views-exposed-form-products-main-catalog') {
    $form['#attached']['js'][] = drupal_get_path('module', 'gf_ajax') . '/js/gf_ajax_views_exp_filter.js';
    $settings = [];
    foreach($form['#info'] as $filter) {
      $settings[GF_AJAX_VIEWS_FILTER_JS_SETTINGS_NAME][] = $filter['value'];
    }
    drupal_add_js($settings, 'setting');
  }
}

/**
 * Implements template_preprocess_views_exposed_form().
 */
function gf_ajax_preprocess_views_exposed_form(&$variables) {
  if ($variables['form']['#id'] == 'views-exposed-form-products-main-catalog' && 
    !$variables['logged_in']) {
    // Убираем для анонимов фильтр по цене (он у нас заряжен на оптовую, которую
    // анонимы все-равно не видят).
    unset($variables['widgets']['filter-price']);
  }
}
